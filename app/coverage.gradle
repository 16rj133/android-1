apply plugin: 'jacoco'

afterEvaluate { project ->
  project.android.buildTypes.each { type ->
    task "jacoco${type.name.capitalize()}TestReport"(
        type: JacocoReport,
        dependsOn: "test${type.name.capitalize()}UnitTest") {

      reports {
        xml.enabled = true
        html.enabled = true
      }

      jacocoClasspath = configurations['androidJacocoAnt']

      def fileFilter = ['**/Dagger*.class', '**/R.class', '**/R$*.class', '**/BuildConfig.*',
                        '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
      def debugTree = fileTree(
          dir: "${buildDir}/intermediates/classes/${type.name}",
          excludes: fileFilter)
      def mainSrc = "${project.projectDir}/src/main/java"
      sourceDirectories = files([mainSrc])
      classDirectories = files([debugTree])
      executionData = files("${buildDir}/jacoco/test${type.name.capitalize()}UnitTest.exec")

      doLast {
        println "JaCoCo report has been generated to file://${reports.html.destination}/index.html"
      }
    }
  }

  task jacocoTestReport(dependsOn: project.android.buildTypes.collect {
    def type = it.name
    "jacoco${type.capitalize()}TestReport"
  })
}